from typing import *


class leetcode_859(object):
    """leetcode_859 documentation"""

    def __init__(self, *args, **kwargs):
        """Constructor for leetcode_859"""
        pass

    def solve(self):
        l = [
            [
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20,
                5,
                10,
                5,
                20
            ],
            [5, 5, 5, 10, 20],
            [5, 5, 10],
            [10,10],
            [5, 5, 10, 10, 20]
        ]
        for i in l:
            print(i, self.lemonadeChange(i))

    def lemonadeChange(self, bills: List[int]) -> bool:
        five = 0
        ten = 0
        for b in bills:
            if b == 5:
                five+=1
            if b == 10:
                if five == 0:
                    return False
                five-=1
                ten+=1
            if b == 20:
                if five>0 and ten > 0:
                    five-=1
                    ten-=1
                elif five >=3:
                    five -= 3
                else:
                    return False
        return True


if __name__ == '__main__':
    l: leetcode_859 = leetcode_859()
    l.solve()
